{"name":"pyTalkManager","tagline":"Software to aid public talk coordinators in the congregations of Jehovah's Witness.","body":"# pyTalkManager\r\n\r\npyTalkManager is a program to aid public talk coordinators in the\r\ncongregations of Jehovah's Witness. It is written in\r\n[Python3](https://www.python.org/) and uses the\r\n[Qt](http://qt-project.org/) GUI framework\r\n([PySide](http://qt-project.org/wiki/PySide)) and\r\n[SQLite](https://www.sqlite.org/) for its database, all of which are\r\nopen source and cross platform technologies. Visit the project's\r\n[wiki](https://github.com/TheoDevelopers/pyTalkManager/wiki) for more\r\ninformation.\r\n\r\n##Development\r\n\r\npyTalkManager is only now starting to be developed. At the moment I am\r\nin the designing phase and do not expect to have pyTalkManager ready\r\nfor quite some time. Check back every few weeks to keep an eye on the\r\nprogress.\r\n\r\n\r\n##Installation\r\n\r\nVisit the\r\n[installation section](https://github.com/TheoDevelopers/pyTalkManager/wiki/installation)\r\nin our wiki for installation instructions.\r\n\r\n\r\n##Open Source\r\n\r\npyTalkManager is being developed under an open source software\r\nmodel. I would like to take the time to explain what exactly that\r\nmeans and how it benefits you as a user.\r\n\r\n\r\n###Open Source and Free Software\r\n\r\nComputer applications are made with something called a *source\r\ncode*. The source code is the written instructions the application\r\nuses to run on your computer. An analogy can be made with baking. If a\r\ncake were to be baked, the baker would have to follow a set of\r\ninstructions, a recipe, in order to bake their delicious cake. It can\r\nbe said that the recipe is the cake's *source code*.\r\n\r\nSay you love the cake and you have a few ideas to improve upon on it,\r\nsay you want to add raisins, or perhaps bake a smaller version of the\r\ncake to fit in lunch boxes. Maybe you are allergic to nuts and need to\r\nknow if the cake contains nuts. Well, if the baker keeps his recipe\r\nsecret then any of those options are out of your hands.\r\n\r\n[Open source software](http://opensource.org/)/[Free software](https://www.gnu.org/philosophy/free-sw.html)\r\nrefers to software in which its source code, or *recipe*, is made\r\npublic for anyone to view, modify, and share. Perhaps you would like\r\nto add a new feature or fix a bug. This is only possible if the\r\nproject is open source.\r\n\r\n\r\n###Benefits\r\n\r\nUsing an open source model has benefits to the project and also to\r\nyou, the end user.\r\n\r\n\r\n####The Project\r\n\r\nAn open source model allows many people to take a part in the\r\nproject's development. Perhaps one person can help by fixing a bug in\r\nthe software, another person may help in the design of the GUI,\r\nGraphical User Interface, while someone else may assist with improving\r\nthe database or translate pyTalkManager.\r\n\r\nAlso, the responsibility of building and maintaining the project\r\ndoesn't fall on the shoulders of one or two individuals. By having\r\nmany eyes reviewing and contributing to the project everyone can have\r\na hand in the building of pyTalkManager.\r\n\r\n\r\n####The End-User (You)\r\n\r\nThe benefits of using an open source model isn't only for the\r\nproject's development but also for its users as well.\r\n\r\nMore often than not, when you use closed source software, your data is\r\nlocked into the program you are using. For example, say you use a\r\npopular talk manager for your congregation but then you decide to\r\nmigrate to another program. You will not be able to because the author\r\nof said program hasn't disclosed how the data is stored. Further more,\r\nthe data may not be user accessible. You are effectively locked into\r\nthe program.\r\n\r\nWith open software everything is documented. Data is not stored in a\r\nway that locks it into the application.\r\n\r\nAlso, say you have a feature that you would like to see implemented\r\nbut the developer of the project doesn't know how or doesn't want to\r\nspend the time in implementing it. In an open source project, anyone\r\ncan implement your feature without relaying on the project's\r\nmanager(s) having to do the work. This means the project has the\r\npenitential of gaining features faster than closed sourced projects.\r\n\r\nIt is also important to consider the fact that the developer of a\r\nproject may disappear and stop developing the program you rely on. In\r\nan open source project if that were to happen, anyone can take the\r\nsource code and continue to develop the project under a new name. This\r\nis called forking. This is what happened to the\r\n[OpenOffice.org](http://www.OpenOffice.org) project. Many people felt\r\nthe project wasn't moving in the right direction and were unhappy with\r\nthe state of OpenOffice.org. They took action and forked project.\r\n[LibreOffice](https://www.libreoffice.org/) is now a much better\r\noffice suite than OpenOffice.org has ever been.\r\n\r\nMore over, what if you love pyTalkManager but wish there were an\r\nAndroid and/or iPhone app that can import the pyTalkManager's\r\ndatabase? Since pyTalkManager and its tools are open sourced, creating\r\nsuch app isn't only possible but not difficult.\r\n\r\nPerhaps you don't like pyTalkManager and decide to build another\r\napplication. Create your application and import pyTalkManager's\r\ndatabase so that your data can be used. It's very simple.\r\n\r\nThis and more is all possible with open source software.\r\n\r\n\r\n##License\r\n\r\npyTalkManager is released under the\r\n[GLP v.3 license](https://www.gnu.org/copyleft/gpl.html).\r\n\r\n\r\n##Note\r\n\r\npyTalkManager is not affiliated with the\r\n[Watch Tower Bible and Tract Society of Pennsylvania](http://www.JW.org).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}